@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Published Projects - ProjectPlanning</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f7f8fa;
            height: 100vh;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding-top: 60px;
            font-family: 'Segoe UI', sans-serif;
        }

        .navbar {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .card {
            width: 100%;
            max-width: 600px;
            margin-bottom: 20px;
            border-radius: 10px;
            border: none;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
        }

        .card:hover {
            transform: scale(1.01);
        }

        h3 {
            font-weight: 600;
            margin-bottom: 30px;
        }

        .btn-outline-primary {
            border-radius: 8px;
        }

        #projectList {
            width: 90%;
            max-width: 700px;
        }
    </style>
</head>
<body>

    <!-- Navbar con bot√≥n de logout -->
    <nav class="navbar navbar-light bg-light d-flex justify-content-between px-4 py-2">
        <span class="navbar-brand mb-0 h5">Project Planning - Recursos</span>
        <button class="btn btn-outline-danger btn-sm" onclick="logout()">Cerrar sesi√≥n</button>
    </nav>

    <h3>üìã Proyectos Disponibles</h3>

    <div id="projectList" class="container text-center">
        <p class="text-muted">Cargando proyectos...</p>
    </div>

    <!-- Modal para detalles del proyecto -->
    <div class="modal fade" id="projectModal" tabindex="-1" aria-labelledby="projectModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="projectModalLabel" class="modal-title"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="projectModalBody"></div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function checkBonitaSession() {
            const sessionId = localStorage.getItem("bonitaSessionId");
            const apiToken = localStorage.getItem("bonitaApiToken");

            if (!sessionId || !apiToken) {
                window.location.href = "/AuthView/Login";
                return false;
            }

            return true;
        }

        async function loadProjects() {
            const listDiv = document.getElementById("projectList");

            try {
                const res = await fetch("/api/projects");

                if (!res.ok) {
                    listDiv.innerHTML = "<p class='text-danger'>‚ùå Error cargando proyectos.</p>";
                    return;
                }

                const projects = await res.json();
                
                if (projects.length === 0) {
                    listDiv.innerHTML = "<p class='text-muted'>No hay proyectos publicados a√∫n.</p>";
                    return;
                }

                listDiv.innerHTML = "";
                projects.forEach(p => {
                    const card = document.createElement("div");
                    card.className = "card p-3 text-start";
                    card.innerHTML = `
                        <h5 class="fw-bold">${p.name}</h5>
                        <p class="mb-1"><strong>Fecha Inicio:</strong> ${new Date(p.startDate).toLocaleDateString('es-ES')}</p>
                        <p class="mb-2"><strong>Fecha Fin:</strong> ${new Date(p.endDate).toLocaleDateString('es-ES')}</p>
                        <button class="btn btn-outline-primary btn-sm" onclick="viewDetails(${p.id})">üîç Ver Detalles</button>
                    `;
                    listDiv.appendChild(card);
                });
            } catch (error) {
                console.error("Error cargando proyectos:", error);
                listDiv.innerHTML = "<p class='text-danger'>‚ùå Error de conexi√≥n.</p>";
            }
        }

        async function viewDetails(id) {
            try {
                const res = await fetch(`/api/projects/${id}`);

                if (!res.ok) {
                    alert("‚ö†Ô∏è Error cargando detalles del proyecto.");
                    return;
                }

                const project = await res.json();

                document.getElementById("projectModalLabel").textContent = project.name;

                let resourcesHtml = '';
                if (project.resources && project.resources.length > 0) {
                    resourcesHtml += '<div class="list-group mt-2">';

                    project.resources.forEach(r => {
                        const badgeClass = 
                            r.state === 'pending' ? 'bg-warning text-dark' :
                            r.state === 'accepted' ? 'bg-success' : 'bg-secondary';

                        const resourceRow = r.state === 'pending'
                            ? '<div class="d-flex align-items-center">' +
                                '<input type="email" id="email-' + r.id + '" ' +
                                    'class="form-control form-control-sm me-2" ' +
                                    'placeholder="Email de contacto" ' +
                                    'style="width: 180px;">' +
                                '<button class="btn btn-sm btn-success" ' +
                                    'onclick="offerResource(' + project.id + ', ' + r.id + ')">' +
                                    'Ofrecer' +
                                '</button>' +
                              '</div>'
                            : '<span class="text-muted small"><strong>Ofrecido por:</strong> ' + (r.contactEmail || "‚Äî") + '</span>';

                        resourcesHtml += 
                            '<div id="resource-' + r.id + '" ' +
                                'class="list-group-item d-flex justify-content-between align-items-center border-0 border-bottom py-2">' +
                                '<div>' +
                                    '<span class="fw-semibold">' + r.name + '</span>' +
                                    '<span class="badge ' + badgeClass + ' ms-2">' + r.state + '</span>' +
                                '</div>' +
                                resourceRow +
                            '</div>';
                    });

                    resourcesHtml += '</div>';
                } else {
                    resourcesHtml = '<p class="text-muted fst-italic mt-2">Sin recursos definidos</p>';
                }

                document.getElementById("projectModalBody").innerHTML = 
                    '<p><strong>Inicio:</strong> ' + new Date(project.startDate).toLocaleDateString('es-ES') + '</p>' +
                    '<p><strong>Fin:</strong> ' + new Date(project.endDate).toLocaleDateString('es-ES') + '</p>' +
                    '<p><strong>Recursos:</strong></p>' +
                    resourcesHtml;

                const modal = new bootstrap.Modal(document.getElementById('projectModal'));
                modal.show();
            } catch (error) {
                console.error("Error:", error);
                alert("‚ö†Ô∏è Error cargando detalles del proyecto.");
            }
        }

        async function offerResource(projectId, resourceId) {
            const emailInput = document.getElementById('email-' + resourceId);
            const contactEmail = emailInput ? emailInput.value.trim() : "";

            const atSymbol = String.fromCharCode(64);
            if (!contactEmail || !contactEmail.includes(atSymbol)) {
                alert("‚ö†Ô∏è Ingrese un email de contacto v√°lido.");
                return;
            }

            try {
                const res = await fetch('/api/projects/' + projectId + '/resources/' + resourceId + '/offer', {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ contactEmail: contactEmail })
                });

                if (!res.ok) {
                    alert("‚ö†Ô∏è No se pudo ofrecer el recurso.");
                    return;
                }

                const li = document.getElementById('resource-' + resourceId);
                if (li) {
                    li.querySelector(".badge").className = "badge bg-success";
                    li.querySelector(".badge").textContent = "accepted";
                    li.querySelectorAll("input, button").forEach(el => el.remove());
                    li.innerHTML += '<span class="text-muted small ms-2"><strong>Ofrecido por:</strong> ' + contactEmail + '</span>';
                }

                alert("‚úÖ Recurso ofrecido correctamente.");
            } catch (error) {
                console.error("Error ofreciendo recurso:", error);
                alert("‚ö†Ô∏è Error al ofrecer recurso.");
            }
        }

        function logout() {
            localStorage.clear();
            window.location.href = "/AuthView/Login";
        }

        if (checkBonitaSession()) {
            loadProjects();
        }
    </script>
</body>
</html>
