@model ProjectPlanning.Web.Models.Project

@{
    
    ViewData["Title"] = "Create Project";
}

<h2>Create Project</h2>


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" maxlength="30"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="StartDate"></label>
        <input asp-for="StartDate" type="date" class="form-control" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EndDate"></label>
        <input asp-for="EndDate" type="date" class="form-control" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Resources</label>
        <div id="resource-list">
            @if (Model.Resources != null && Model.Resources.Count > 0) {
                @for (int i = 0; i < Model.Resources.Count; i++)
                {
                    <div class="resource-item" id="resource-@i">
                        <input type="text" 
                            name="Resources[@i]" 
                            value="@Model.Resources[i]" 
                            class="form-control mb-1" 
                            placeholder="Descripción del recurso" 
                            maxlength="100" />
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeResource(@i)">Delete</button>
                    </div>
                }
            }
        </div>
        <button type="button" class="btn btn-primary btn-sm mb-4" onclick="addResource()">Add resource</button>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
    let resourceIndex = @(Model?.Resources?.Count ?? 0);

    function addResource() {
        const container = document.getElementById('resource-list');

        const div = document.createElement('div');
        div.classList.add('resource-item', 'mb-1');
        div.id = `resource-${resourceIndex}`;

        const input = document.createElement('input');
        input.type = 'text';
        input.name = `Resources[${resourceIndex}]`;
        input.placeholder = 'Descripción del recurso';
        input.classList.add('form-control', 'mb-1');
        input.maxLength = 100; // límite de caracteres

        const removeBtn = document.createElement('button');
        removeBtn.type = 'button';
        removeBtn.classList.add('btn', 'btn-danger', 'btn-sm', 'mb-1');
        removeBtn.innerText = 'Eliminar';

        const currentIndex = resourceIndex;
        removeBtn.onclick = () => removeResource(currentIndex);

        div.appendChild(input);
        div.appendChild(removeBtn);
        container.appendChild(div);

        resourceIndex++;
    }

    function removeResource(index) {
        const element = document.getElementById(`resource-${index}`);
        if (element) element.remove();
    }

    // Verifica que haya al menos un recurso antes de enviar
    document.querySelector('form').addEventListener('submit', function(event) {
        const resources = document.querySelectorAll('#resource-list input[type="text"]');
        if (resources.length === 0) {
            alert('At least one resource is required.');
            event.preventDefault();
            return;
        }

        for (let i = 0; i < resources.length; i++) {
            if (!resources[i].value.trim()) {
                alert(`Resource numeber ${i + 1} cannot be empty.`);
                event.preventDefault();
                return;
            }
        }
    });
    </script>
}
